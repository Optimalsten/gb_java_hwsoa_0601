/*
Задание 1. Поиск ноутбуков

Подумать над структурой класса Ноутбук для магазина техники - выделить поля и методы.
-Создать множество ноутбуков.
-Написать метод, который будет запрашивать у пользователя критерий (или критерии) фильтрации и выведет ноутбуки,
отвечающие фильтру. Критерии фильтрации можно хранить в Map. Например:
Введите цифру, соответствующую необходимому критерию:
1 - ОЗУ
2 - Объем ЖД
3 - Операционная система
4 - Цвет …
-Далее нужно запросить минимальные значения для указанных критериев -
сохранить параметры фильтрации можно также в Map.
-Отфильтровать ноутбуки их первоначального множества и вывести проходящие по условиям.

Подсказка № 1. Каждый ноутбук имеет определенные характеристики. Определите,
какие поля вам нужны для хранения информации о ноутбуке. Например, вам могут понадобиться
поля для объема оперативной памяти, жесткого диска, операционной системы и цвета.

Подсказка № 2. Создайте конструктор для инициализации полей и методы для получения
значений этих полей. Это поможет вам создавать и управлять объектами класса Laptop.

Подсказка № 3. Используйте коллекцию Set для хранения множества ноутбуков.
Это позволит вам хранить уникальные ноутбуки и легко манипулировать данными.

Подсказка № 4. Создайте меню, позволяющее пользователю выбирать критерии фильтрации.
Используйте Scanner для ввода данных от пользователя.

Подсказка № 5. Используйте Map для хранения выбранных пользователем критериев фильтрации
и их значений. Это облегчит работу с фильтрами при отборе ноутбуков.

Подсказка № 6. Создайте метод для фильтрации ноутбуков. В этом методе проверяйте,
соответствуют ли ноутбуки критериям фильтрации, и выводите те, которые проходят отбор.

Подсказка № 7. После каждого выбора критерия спросите у пользователя, хочет ли он добавить
еще один критерий. Используйте цикл while для продолжения запроса до тех пор,
пока пользователь не закончит ввод.
 */

public class Main {
    public static void main(String[] args) {

        System.out.println("Hello and welcome!");
        for (int i = 1; i <= 5; i++) {
            System.out.println("i = " + i);

        }
    }
}

